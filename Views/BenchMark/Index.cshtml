@{
    ViewBag.Title = "Partial View Benchmark";
    var model = new BenchMarkPartial4._8._1.Models.ProductModel { ProductId = 1, Name = "Test Product" };


}

<h2>Partial View Performance Tests</h2>

<!-- Buttons to trigger benchmarking -->
<button id="testHtmlPartial">Test Html.Partial (JS)</button>
<button id="testHtmlRenderPartial">Test Html.RenderPartial (JS)</button>


<h3>Execution Times</h3>
<p id="htmlPartialTime">Html.Partial (JS): Not Tested</p>
<p id="htmlRenderPartialTime">Html.RenderPartial (JS): Not Tested</p>

<h3>Loading Partial Views</h3>


<!-- Benchmark Partial Views Directly in Razor -->
@{
    var stopwatch1 = System.Diagnostics.Stopwatch.StartNew();

    for (int i = 0; i < 1000; i++)
    {
        @Html.Partial("_ProductCard", new BenchMarkPartial4._8._1.Models.ProductModel { Name = "Sample Product", ProductId = 123 })
    }

    stopwatch1.Stop();
}

<p>Html.Partial Execution Time (Server-Side): <b>@stopwatch1.ElapsedMilliseconds ms</b></p>

@{
    var stopwatch2 = System.Diagnostics.Stopwatch.StartNew();

    for (int i = 0; i < 1000; i++)
    {
        Html.RenderPartial("_ProductCard", model);
    }

    stopwatch2.Stop();
}

<p>Html.RenderPartial Execution Time (Server-Side): <b>@stopwatch2.ElapsedMilliseconds ms</b></p>

@{
    var stopwatch3 = System.Diagnostics.Stopwatch.StartNew();


    @*for (int i = 0; i < 1000; i++)
        {
            @Html.Partial("_ProductCard", model)
        }*@
    var products = new List<BenchMarkPartial4._8._1.Models.ProductModel>();
    for (int i = 0; i < 1000; i++)
    {
        products.Add(new BenchMarkPartial4._8._1.Models.ProductModel { ProductId = i + 1, Name = "Product " + (i + 1) });
    }

    foreach (var product in products)
    {
        @Html.Partial("_ProductCard", product)
    }
    stopwatch3.Stop();
}

@{
    var stopwatch4 = System.Diagnostics.Stopwatch.StartNew();

    var products1 = new List<BenchMarkPartial4._8._1.Models.ProductModel>();
    for (int i = 0; i < 1000; i++)
    {
        products1.Add(new BenchMarkPartial4._8._1.Models.ProductModel { ProductId = i + 1, Name = "Product " + (i + 1) });
    }

    foreach (var product in products1)
    {
        Html.RenderPartial("_ProductCard", product);
    }

    stopwatch4.Stop();
}

<p><strong>Html.RenderPartial (1000 loops of unique product):</strong> @stopwatch4.ElapsedMilliseconds ms</p>
<p><strong>Html.Partial (1000 loops of same product):</strong> @stopwatch3.ElapsedMilliseconds ms</p>
<!-- Container for JavaScript-rendered partials -->
<div id="partialContainer"></div>

<script>
document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("testHtmlPartial").addEventListener("click", function () {
            let start = performance.now();
            let container = document.getElementById("partialContainer");
            container.innerHTML = ""; // Clear old results

            let template = `
                <div class="product-card">
                    <h3>Test Product</h3>
                    <p>Product ID: 1</p>
                </div>
            `;

            for (let i = 0; i < 1000; i++) {
                container.innerHTML += template;
            }

            let end = performance.now();
            document.getElementById("htmlPartialTime").innerText = "Html.Partial Execution Time (Client-Side): " + (end - start).toFixed(2) + " ms";
        });

        document.getElementById("testHtmlRenderPartial").addEventListener("click", function () {
            let start = performance.now();
            let container = document.getElementById("partialContainer");
            container.innerHTML = ""; // Clear old results

            let template = document.createElement("div");
            template.classList.add("product-card");
            template.innerHTML = `<h3>Test Product</h3><p>Product ID: 1</p>`;

            for (let i = 0; i < 1000; i++) {
                let newElement = template.cloneNode(true);
                container.appendChild(newElement);
            }

            let end = performance.now();
            document.getElementById("htmlRenderPartialTime").innerText = "Html.RenderPartial Execution Time (Client-Side): " + (end - start).toFixed(2) + " ms";
        });
    });</script>
